version: "3.4"

services:
  plex:
    build:
      context: .
      target: app_pms
    container_name: plex
    restart: unless-stopped
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}
      PLEX_DATA: ${PLEX_DATA:-./plexdata}
      TZ: ${TIMEZONE:-Europe/Brussels}
      PLEX_HOSTNAME: ${PLEX_HOSTNAME:-plexmediaserver}
      PLEX_CLAIM: ${PLEX_CLAIM:-no}
    hostname: ${PLEX_HOSTNAME:-plexmediaserver}
    volumes:
      - ${PLEX_DATA:-./plexdata}/database:/config
      - ${PLEX_DATA:-./plexdata}/transcode:/transcode
      - ${PLEX_DATA:-./plexdata}/media:/data

  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    environment:
      PUID: ${DELUGE_UID:-1000}
      PGID: ${DELUGE_GID:-1000}
      TZ: ${TIMEZONE:-Europe/Brussels}
      DELUGE_LOGLEVEL: ${DELUGE_LOGLEVEL:-error} #optional
    volumes:
      - ./docker/deluge/config:/config
      - ${DELUGE_DOWNLOADS_DIR:-./docker/deluge/downloads}:/downloads
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    network_mode: host
    user: ${DELUGE_UID:-1000}:${DELUGE_GID:-1000}
    volumes:
      - ./docker/jellyfin/config:/config
      - ./docker/jellyfin/cache:/cache
      - ${JELLYFIN_MEDIA:-./docker/jellyfin/media}:/media
    restart: unless-stopped

  redis:
    image: redis
    container_name: redis
    restart: always
    command: ["--databases", "1"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis:/data

  mariadb:
    image: mariadb
    container_name: mariadb
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-owncloud}
      - MYSQL_USER=${MYSQL_USER:-owncloud}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-owncloud}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-owncloud}
    command: ["--max-allowed-packet=128M", "--innodb-log-file-size=64M"]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u", "root", "--password=owncloud"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mariadb:/var/lib/mysql

  owncloud:
    image: owncloud/server:latest
    container_name: owncloud_server
    restart: always
    depends_on:
      - mariadb
      - redis
    environment:
      - OWNCLOUD_DOMAIN=${OWNCLOUD_DOMAIN:-localhost}
      - OWNCLOUD_DB_TYPE=${OWNCLOUD_DB_TYPE:-mysql}
      - OWNCLOUD_DB_NAME=${OWNCLOUD_DB_NAME:-owncloud}
      - OWNCLOUD_DB_USERNAME=${OWNCLOUD_DB_USERNAME:-owncloud}
      - OWNCLOUD_DB_PASSWORD=${OWNCLOUD_DB_PASSWORD:-owncloud}
      - OWNCLOUD_DB_HOST=${OWNCLOUD_DB_HOST:-mariadb}
      - OWNCLOUD_ADMIN_USERNAME=${OWNCLOUD_ADMIN_USERNAME:-admin}
      - OWNCLOUD_ADMIN_PASSWORD=${OWNCLOUD_ADMIN_PASSWORD:-secret}
      - OWNCLOUD_MYSQL_UTF8MB4=${OWNCLOUD_MYSQL_UTF8MB4:-true}
      - OWNCLOUD_REDIS_ENABLED=${OWNCLOUD_REDIS_ENABLED:-true}
      - OWNCLOUD_REDIS_HOST=${OWNCLOUD_REDIS_HOST:-redis}
    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - owncloud_files:/mnt/data

  caddy:
    build:
      context: .
      target: app_caddy
    container_name: caddy
    restart: unless-stopped
    depends_on:
      - plex
      - deluge
      - jellyfin
      - owncloud
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    environment:
      PLEX_SERVER_NAME: ${PLEX_SERVER_NAME:-plex.local}
      DELUGE_SERVER_NAME: ${DELUGE_SERVER_NAME:-deluge.local}
      JELLYFIN_SERVER_NAME: ${JELLYFIN_SERVER_NAME:-jellyfin.local}
      OWNCLOUD_SERVER_NAME: ${OWNCLOUD_SERVER_NAME:-owncloud.local}
      PLEX_HOST: localhost
      JELLYFIN_HOST: localhost
      DELUGE_HOST: localhost
      OWNCLOUD_HOST: localhost

volumes:
  caddy_data:
  caddy_config:
  owncloud_files:
  mariadb:
  redis:
